version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    environment:
      - VITE_API_BASE_URL=/api
      - VITE_APP_TITLE=OneCar 商品管理系统
      - VITE_ENABLE_DEBUG=false
    networks:
      - onecar-network
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
      - JWT_SECRET=${JWT_SECRET:-change-this-in-production}
      - CORS_ORIGINS=http://localhost,http://localhost:80
      - UPLOAD_MAX_SIZE=10485760
      - LOG_LEVEL=info
    volumes:
      - ./backend/uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - onecar-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - onecar-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # 可选：数据库服务
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     - POSTGRES_DB=onecar
  #     - POSTGRES_USER=onecar_user
  #     - POSTGRES_PASSWORD=${DB_PASSWORD:-change-this-password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - onecar-network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U onecar_user -d onecar"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # 可选：Redis 服务
  # redis:
  #   image: redis:7-alpine
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - onecar-network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

networks:
  onecar-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  uploads:
    driver: local
  logs:
    driver: local
  # postgres_data:
  #   driver: local
  # redis_data:
  #   driver: local